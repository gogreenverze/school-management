"""Add new fields to TeacherProfile and StudentProfile models

Revision ID: b353c3f60fdc
Revises:
Create Date: 2025-05-13 20:24:19.822473

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b353c3f60fdc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create standards table
    op.create_table('standards',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=64), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('academic_year', sa.String(length=10), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', name='uq_standard_name')
    )

    # Create sections table
    op.create_table('sections',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=10), nullable=False),
        sa.Column('standard_id', sa.Integer(), nullable=False),
        sa.Column('description', sa.String(length=256), nullable=True),
        sa.Column('capacity', sa.Integer(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['standard_id'], ['standards.id'], name='fk_section_standard_id'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', 'standard_id', name='uq_section_name_standard')
    )
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('standard_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('section_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('academic_year', sa.String(length=10), nullable=False))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_foreign_key('fk_classes_section_id', 'sections', ['section_id'], ['id'])
        batch_op.create_foreign_key('fk_classes_standard_id', 'standards', ['standard_id'], ['id'])
        batch_op.drop_column('grade')
        batch_op.drop_column('section')

    with op.batch_alter_table('student_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('standard_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('section_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('blood_group', sa.String(length=5), nullable=True))
        batch_op.add_column(sa.Column('address', sa.String(length=256), nullable=True))
        batch_op.add_column(sa.Column('emergency_contact', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('medical_conditions', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('previous_school', sa.String(length=128), nullable=True))
        batch_op.add_column(sa.Column('academic_year', sa.String(length=10), nullable=False))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_foreign_key('fk_students_section_id', 'sections', ['section_id'], ['id'])
        batch_op.create_foreign_key('fk_students_standard_id', 'standards', ['standard_id'], ['id'])
        batch_op.drop_column('grade')
        batch_op.drop_column('section')

    with op.batch_alter_table('teacher_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employee_id', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('date_of_birth', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('date_of_joining', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('primary_subject', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('secondary_subjects', sa.String(length=128), nullable=True))
        batch_op.add_column(sa.Column('experience_years', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('emergency_contact', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('address', sa.String(length=256), nullable=True))
        batch_op.add_column(sa.Column('specialization', sa.String(length=128), nullable=True))
        batch_op.add_column(sa.Column('bio', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.create_unique_constraint('uq_teacher_employee_id', ['employee_id'])
        batch_op.drop_column('subject')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tables in reverse order
    with op.batch_alter_table('teacher_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subject', sa.VARCHAR(length=64), nullable=True))
        batch_op.drop_constraint('uq_teacher_employee_id', type_='unique')
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_active')
        batch_op.drop_column('bio')
        batch_op.drop_column('specialization')
        batch_op.drop_column('address')
        batch_op.drop_column('emergency_contact')
        batch_op.drop_column('experience_years')
        batch_op.drop_column('secondary_subjects')
        batch_op.drop_column('primary_subject')
        batch_op.drop_column('date_of_joining')
        batch_op.drop_column('date_of_birth')
        batch_op.drop_column('employee_id')

    with op.batch_alter_table('student_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('section', sa.VARCHAR(length=10), nullable=True))
        batch_op.add_column(sa.Column('grade', sa.VARCHAR(length=10), nullable=False))
        batch_op.drop_constraint('fk_students_standard_id', type_='foreignkey')
        batch_op.drop_constraint('fk_students_section_id', type_='foreignkey')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_active')
        batch_op.drop_column('academic_year')
        batch_op.drop_column('previous_school')
        batch_op.drop_column('medical_conditions')
        batch_op.drop_column('emergency_contact')
        batch_op.drop_column('address')
        batch_op.drop_column('blood_group')
        batch_op.drop_column('section_id')
        batch_op.drop_column('standard_id')

    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('section', sa.VARCHAR(length=10), nullable=True))
        batch_op.add_column(sa.Column('grade', sa.VARCHAR(length=10), nullable=False))
        batch_op.drop_constraint('fk_classes_standard_id', type_='foreignkey')
        batch_op.drop_constraint('fk_classes_section_id', type_='foreignkey')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_active')
        batch_op.drop_column('academic_year')
        batch_op.drop_column('section_id')
        batch_op.drop_column('standard_id')

    # Drop the sections and standards tables
    op.drop_table('sections')
    op.drop_table('standards')

    # ### end Alembic commands ###